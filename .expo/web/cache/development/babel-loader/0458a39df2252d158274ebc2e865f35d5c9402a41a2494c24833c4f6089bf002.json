{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _useDimensions = require(\"./utils/useDimensions\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar Toast = function Toast(props) {\n  var id = props.id,\n    onDestroy = props.onDestroy,\n    icon = props.icon,\n    _props$type = props.type,\n    type = _props$type === void 0 ? \"normal\" : _props$type,\n    message = props.message,\n    _props$duration = props.duration,\n    duration = _props$duration === void 0 ? 5000 : _props$duration,\n    style = props.style,\n    textStyle = props.textStyle,\n    _props$animationDurat = props.animationDuration,\n    animationDuration = _props$animationDurat === void 0 ? 250 : _props$animationDurat,\n    _props$animationType = props.animationType,\n    animationType = _props$animationType === void 0 ? \"slide-in\" : _props$animationType,\n    successIcon = props.successIcon,\n    dangerIcon = props.dangerIcon,\n    warningIcon = props.warningIcon,\n    successColor = props.successColor,\n    dangerColor = props.dangerColor,\n    warningColor = props.warningColor,\n    normalColor = props.normalColor,\n    placement = props.placement,\n    swipeEnabled = props.swipeEnabled,\n    _onPress = props.onPress;\n  var containerRef = (0, _react.useRef)(null);\n  var _useState = (0, _react.useState)(new _reactNative.Animated.Value(0)),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 1),\n    animation = _useState2[0];\n  var panResponderRef = (0, _react.useRef)();\n  var panResponderAnimRef = (0, _react.useRef)();\n  var closeTimeoutRef = (0, _react.useRef)(null);\n  var dims = (0, _useDimensions.useDimensions)();\n  (0, _react.useEffect)(function () {\n    _reactNative.Animated.timing(animation, {\n      toValue: 1,\n      useNativeDriver: _reactNative.Platform.OS !== \"web\",\n      duration: animationDuration\n    }).start();\n    if (duration !== 0 && typeof duration === \"number\") {\n      closeTimeoutRef.current = setTimeout(function () {\n        handleClose();\n      }, duration);\n    }\n    return function () {\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\n    };\n  }, [duration]);\n  (0, _react.useEffect)(function () {\n    if (!props.open) {\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\n      handleClose();\n    }\n  }, [props.open]);\n  var handleClose = function handleClose() {\n    _reactNative.Animated.timing(animation, {\n      toValue: 0,\n      useNativeDriver: _reactNative.Platform.OS !== \"web\",\n      duration: animationDuration\n    }).start(function () {\n      return onDestroy();\n    });\n  };\n  var panReleaseToLeft = function panReleaseToLeft(gestureState) {\n    _reactNative.Animated.timing(getPanResponderAnim(), {\n      toValue: {\n        x: -dims.width / 10 * 9,\n        y: gestureState.dy\n      },\n      useNativeDriver: _reactNative.Platform.OS !== \"web\",\n      duration: 250\n    }).start(function () {\n      return onDestroy();\n    });\n  };\n  var panReleaseToRight = function panReleaseToRight(gestureState) {\n    _reactNative.Animated.timing(getPanResponderAnim(), {\n      toValue: {\n        x: dims.width / 10 * 9,\n        y: gestureState.dy\n      },\n      useNativeDriver: _reactNative.Platform.OS !== \"web\",\n      duration: 250\n    }).start(function () {\n      return onDestroy();\n    });\n  };\n  var getPanResponder = function getPanResponder() {\n    if (panResponderRef.current) return panResponderRef.current;\n    panResponderRef.current = _reactNative.PanResponder.create({\n      onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(_, gestureState) {\n        return !(gestureState.dx === 0 && gestureState.dy === 0);\n      },\n      onPanResponderMove: function onPanResponderMove(_, gestureState) {\n        var _getPanResponderAnim;\n        (_getPanResponderAnim = getPanResponderAnim()) === null || _getPanResponderAnim === void 0 ? void 0 : _getPanResponderAnim.setValue({\n          x: gestureState.dx,\n          y: gestureState.dy\n        });\n      },\n      onPanResponderRelease: function onPanResponderRelease(_, gestureState) {\n        if (gestureState.dx > 50) {\n          panReleaseToRight(gestureState);\n        } else if (gestureState.dx < -50) {\n          panReleaseToLeft(gestureState);\n        } else {\n          _reactNative.Animated.spring(getPanResponderAnim(), {\n            toValue: {\n              x: 0,\n              y: 0\n            },\n            useNativeDriver: _reactNative.Platform.OS !== \"web\"\n          }).start();\n        }\n      }\n    });\n    return panResponderRef.current;\n  };\n  var getPanResponderAnim = function getPanResponderAnim() {\n    if (panResponderAnimRef.current) return panResponderAnimRef.current;\n    panResponderAnimRef.current = new _reactNative.Animated.ValueXY({\n      x: 0,\n      y: 0\n    });\n    return panResponderAnimRef.current;\n  };\n  if (icon === undefined) {\n    switch (type) {\n      case \"success\":\n        {\n          if (successIcon) {\n            icon = successIcon;\n          }\n          break;\n        }\n      case \"danger\":\n        {\n          if (dangerIcon) {\n            icon = dangerIcon;\n          }\n          break;\n        }\n      case \"warning\":\n        {\n          if (warningIcon) {\n            icon = warningIcon;\n          }\n          break;\n        }\n    }\n  }\n  var backgroundColor = \"\";\n  switch (type) {\n    case \"success\":\n      backgroundColor = successColor || \"rgb(46, 125, 50)\";\n      break;\n    case \"danger\":\n      backgroundColor = dangerColor || \"rgb(211, 47, 47)\";\n      break;\n    case \"warning\":\n      backgroundColor = warningColor || \"rgb(237, 108, 2)\";\n      break;\n    default:\n      backgroundColor = normalColor || \"#333\";\n  }\n  var animationStyle = {\n    opacity: animation,\n    transform: [{\n      translateY: animation.interpolate({\n        inputRange: [0, 1],\n        outputRange: placement === \"bottom\" ? [20, 0] : [-20, 0]\n      })\n    }]\n  };\n  if (swipeEnabled) {\n    var _animationStyle$trans;\n    (_animationStyle$trans = animationStyle.transform) === null || _animationStyle$trans === void 0 ? void 0 : _animationStyle$trans.push(getPanResponderAnim().getTranslateTransform()[0]);\n  }\n  if (animationType === \"zoom-in\") {\n    var _animationStyle$trans2;\n    (_animationStyle$trans2 = animationStyle.transform) === null || _animationStyle$trans2 === void 0 ? void 0 : _animationStyle$trans2.push({\n      scale: animation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0.7, 1]\n      })\n    });\n  }\n  return _react.default.createElement(_reactNative.Animated.View, _extends({\n    ref: containerRef\n  }, swipeEnabled ? getPanResponder().panHandlers : null, {\n    style: [styles.container, animationStyle]\n  }), props.renderType && props.renderType[type] ? props.renderType[type](props) : props.renderToast ? props.renderToast(props) : _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n    disabled: !_onPress,\n    onPress: function onPress() {\n      return _onPress && _onPress(id);\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [styles.toastContainer, {\n      maxWidth: dims.width / 10 * 9,\n      backgroundColor: backgroundColor\n    }, style]\n  }, icon ? _react.default.createElement(_reactNative.View, {\n    style: styles.iconContainer\n  }, icon) : null, _react.default.isValidElement(message) ? message : _react.default.createElement(_reactNative.Text, {\n    style: [styles.message, textStyle]\n  }, message))));\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  toastContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 12,\n    borderRadius: 5,\n    marginVertical: 5,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    overflow: \"hidden\"\n  },\n  message: {\n    color: \"#fff\",\n    fontWeight: \"500\"\n  },\n  iconContainer: {\n    marginRight: 5\n  }\n});\nvar _default = Toast;\nexports.default = _default;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_useDimensions","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","Toast","props","id","onDestroy","icon","_props$type","type","message","_props$duration","duration","style","textStyle","_props$animationDurat","animationDuration","_props$animationType","animationType","successIcon","dangerIcon","warningIcon","successColor","dangerColor","warningColor","normalColor","placement","swipeEnabled","onPress","containerRef","useRef","_useState","useState","Animated","Value","_useState2","_slicedToArray2","animation","panResponderRef","panResponderAnimRef","closeTimeoutRef","dims","useDimensions","useEffect","timing","toValue","useNativeDriver","Platform","OS","start","current","setTimeout","handleClose","clearTimeout","open","panReleaseToLeft","gestureState","getPanResponderAnim","x","width","y","dy","panReleaseToRight","getPanResponder","PanResponder","create","onMoveShouldSetPanResponder","_","dx","onPanResponderMove","_getPanResponderAnim","setValue","onPanResponderRelease","spring","ValueXY","undefined","backgroundColor","animationStyle","opacity","transform","translateY","interpolate","inputRange","outputRange","_animationStyle$trans","push","getTranslateTransform","_animationStyle$trans2","scale","React","createElement","View","_extends","ref","panHandlers","styles","container","renderType","renderToast","TouchableWithoutFeedback","disabled","toastContainer","maxWidth","iconContainer","isValidElement","Text","StyleSheet","alignItems","paddingHorizontal","paddingVertical","borderRadius","marginVertical","flexDirection","overflow","color","fontWeight","marginRight","_default","exports"],"sources":["C:\\companytask\\Toys_Project\\client\\Toys_Projects\\node_modules\\react-native-toast-notifications\\lib\\module\\toast.tsx"],"sourcesContent":["import React, { FC, useRef, useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Animated,\r\n  StyleProp,\r\n  ViewStyle,\r\n  TextStyle,\r\n  Text,\r\n  TouchableWithoutFeedback,\r\n  PanResponder,\r\n  PanResponderInstance,\r\n  PanResponderGestureState,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { useDimensions } from \"./utils/useDimensions\";\r\n\r\nexport interface ToastOptions {\r\n  /**\r\n   * Id is optional, you may provide an id only if you want to update toast later using toast.update()\r\n   */\r\n  id?: string;\r\n\r\n  /**\r\n   * Customize toast icon\r\n   */\r\n  icon?: JSX.Element;\r\n\r\n  /**\r\n   * Toast types, You can implement your custom types with JSX using renderType method on ToastContainer.\r\n   */\r\n  type?: \"normal\" | \"success\" | \"danger\" | \"warning\" | string;\r\n\r\n  /**\r\n   * In ms, How long toast will stay before it go away\r\n   */\r\n  duration?: number;\r\n\r\n  /**\r\n   * Customize when toast should be placed\r\n   */\r\n  placement?: \"top\" | \"bottom\" | \"center\";\r\n\r\n  /**\r\n   * Customize style of toast\r\n   */\r\n  style?: StyleProp<ViewStyle>;\r\n\r\n  /**\r\n   * Customize style of toast text\r\n   */\r\n  textStyle?: StyleProp<TextStyle>;\r\n\r\n  /**\r\n   * Customize how fast toast will show and hide\r\n   */\r\n  animationDuration?: number;\r\n\r\n  /**\r\n   * Customize how toast is animated when added or removed\r\n   */\r\n  animationType?: \"slide-in\" | \"zoom-in\";\r\n\r\n  /**\r\n   * Customize success type icon\r\n   */\r\n  successIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize danger type icon\r\n   */\r\n  dangerIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize warning type icon\r\n   */\r\n  warningIcon?: JSX.Element;\r\n\r\n  /**\r\n   * Customize success type color. changes toast background color\r\n   */\r\n  successColor?: string;\r\n\r\n  /**\r\n   * Customize danger type color. changes toast background color\r\n   */\r\n  dangerColor?: string;\r\n\r\n  /**\r\n   * Customize warning type color. changes toast background color\r\n   */\r\n  warningColor?: string;\r\n\r\n  /**\r\n   * Customize normal type color. changes toast background color\r\n   */\r\n  normalColor?: string;\r\n\r\n  /**\r\n   * Register event for when toast is pressed. If you're using a custom toast you have to pass this to a Touchable.\r\n   */\r\n  onPress?(id: string): void;\r\n\r\n  /**\r\n   * Execute event after toast is closed\r\n   */\r\n  onClose?(): void;\r\n\r\n  /**\r\n   * Payload data for custom toasts. You can pass whatever you want\r\n   */\r\n  data?: any;\r\n\r\n  swipeEnabled?: boolean;\r\n}\r\n\r\nexport interface ToastProps extends ToastOptions {\r\n  id: string;\r\n  onDestroy(): void;\r\n  message: string | JSX.Element;\r\n  open: boolean;\r\n  renderToast?(toast: ToastProps): JSX.Element;\r\n  renderType?: { [type: string]: (toast: ToastProps) => JSX.Element };\r\n  onHide(): void;\r\n}\r\n\r\nconst Toast: FC<ToastProps> = (props) => {\r\n  let {\r\n    id,\r\n    onDestroy,\r\n    icon,\r\n    type = \"normal\",\r\n    message,\r\n    duration = 5000,\r\n    style,\r\n    textStyle,\r\n    animationDuration = 250,\r\n    animationType = \"slide-in\",\r\n    successIcon,\r\n    dangerIcon,\r\n    warningIcon,\r\n    successColor,\r\n    dangerColor,\r\n    warningColor,\r\n    normalColor,\r\n    placement,\r\n    swipeEnabled,\r\n    onPress,\r\n  } = props;\r\n\r\n  const containerRef = useRef<View>(null);\r\n  const [animation] = useState(new Animated.Value(0));\r\n  const panResponderRef = useRef<PanResponderInstance>();\r\n  const panResponderAnimRef = useRef<Animated.ValueXY>();\r\n  const closeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const dims = useDimensions();\r\n\r\n  useEffect(() => {\r\n    Animated.timing(animation, {\r\n      toValue: 1,\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: animationDuration,\r\n    }).start();\r\n    if (duration !== 0 && typeof duration === \"number\") {\r\n      closeTimeoutRef.current = setTimeout(() => {\r\n        handleClose();\r\n      }, duration);\r\n    }\r\n\r\n    return () => {\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n    };\r\n  }, [duration]);\r\n\r\n  // Handles hide & hideAll\r\n  useEffect(() => {\r\n    if (!props.open) {\r\n      // Unregister close timeout\r\n      closeTimeoutRef.current && clearTimeout(closeTimeoutRef.current);\r\n\r\n      // Close animation them remove from stack.\r\n      handleClose();\r\n    }\r\n  }, [props.open]);\r\n\r\n  const handleClose = () => {\r\n    Animated.timing(animation, {\r\n      toValue: 0,\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: animationDuration,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToLeft = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (-dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const panReleaseToRight = (gestureState: PanResponderGestureState) => {\r\n    Animated.timing(getPanResponderAnim(), {\r\n      toValue: { x: (dims.width / 10) * 9, y: gestureState.dy },\r\n      useNativeDriver: Platform.OS !== \"web\",\r\n      duration: 250,\r\n    }).start(() => onDestroy());\r\n  };\r\n\r\n  const getPanResponder = () => {\r\n    if (panResponderRef.current) return panResponderRef.current;\r\n    panResponderRef.current = PanResponder.create({\r\n      onMoveShouldSetPanResponder: (_, gestureState) => {\r\n        //return true if user is swiping, return false if it's a single click\r\n        return !(gestureState.dx === 0 && gestureState.dy === 0);\r\n      },\r\n      onPanResponderMove: (_, gestureState) => {\r\n        getPanResponderAnim()?.setValue({\r\n          x: gestureState.dx,\r\n          y: gestureState.dy,\r\n        });\r\n      },\r\n      onPanResponderRelease: (_, gestureState) => {\r\n        if (gestureState.dx > 50) {\r\n          panReleaseToRight(gestureState);\r\n        } else if (gestureState.dx < -50) {\r\n          panReleaseToLeft(gestureState);\r\n        } else {\r\n          Animated.spring(getPanResponderAnim(), {\r\n            toValue: { x: 0, y: 0 },\r\n            useNativeDriver: Platform.OS !== \"web\",\r\n          }).start();\r\n        }\r\n      },\r\n    });\r\n    return panResponderRef.current;\r\n  };\r\n\r\n  const getPanResponderAnim = () => {\r\n    if (panResponderAnimRef.current) return panResponderAnimRef.current;\r\n    panResponderAnimRef.current = new Animated.ValueXY({ x: 0, y: 0 });\r\n    return panResponderAnimRef.current;\r\n  };\r\n\r\n  if (icon === undefined) {\r\n    switch (type) {\r\n      case \"success\": {\r\n        if (successIcon) {\r\n          icon = successIcon;\r\n        }\r\n        break;\r\n      }\r\n\r\n      case \"danger\": {\r\n        if (dangerIcon) {\r\n          icon = dangerIcon;\r\n        }\r\n        break;\r\n      }\r\n      case \"warning\": {\r\n        if (warningIcon) {\r\n          icon = warningIcon;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  let backgroundColor = \"\";\r\n  switch (type) {\r\n    case \"success\":\r\n      backgroundColor = successColor || \"rgb(46, 125, 50)\";\r\n      break;\r\n    case \"danger\":\r\n      backgroundColor = dangerColor || \"rgb(211, 47, 47)\";\r\n      break;\r\n    case \"warning\":\r\n      backgroundColor = warningColor || \"rgb(237, 108, 2)\";\r\n      break;\r\n    default:\r\n      backgroundColor = normalColor || \"#333\";\r\n  }\r\n\r\n  const animationStyle: Animated.WithAnimatedObject<ViewStyle> = {\r\n    opacity: animation,\r\n    transform: [\r\n      {\r\n        translateY: animation.interpolate({\r\n          inputRange: [0, 1],\r\n          outputRange: placement === \"bottom\" ? [20, 0] : [-20, 0], // 0 : 150, 0.5 : 75, 1 : 0\r\n        }),\r\n      },\r\n    ],\r\n  };\r\n\r\n  if (swipeEnabled) {\r\n    animationStyle.transform?.push(\r\n      getPanResponderAnim().getTranslateTransform()[0]\r\n    );\r\n  }\r\n\r\n  if (animationType === \"zoom-in\") {\r\n    animationStyle.transform?.push({\r\n      scale: animation.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [0.7, 1],\r\n      }),\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Animated.View\r\n      ref={containerRef}\r\n      {...(swipeEnabled ? getPanResponder().panHandlers : null)}\r\n      style={[styles.container, animationStyle]}\r\n    >\r\n      {props.renderType && props.renderType[type] ? (\r\n        props.renderType[type](props)\r\n      ) : props.renderToast ? (\r\n        props.renderToast(props)\r\n      ) : (\r\n        <TouchableWithoutFeedback\r\n          disabled={!onPress}\r\n          onPress={() => onPress && onPress(id)}\r\n        >\r\n          <View\r\n            style={[\r\n              styles.toastContainer,\r\n              { maxWidth: (dims.width / 10) * 9, backgroundColor },\r\n              style,\r\n            ]}\r\n          >\r\n            {icon ? <View style={styles.iconContainer}>{icon}</View> : null}\r\n            {React.isValidElement(message) ? (\r\n              message\r\n            ) : (\r\n              <Text style={[styles.message, textStyle]}>{message}</Text>\r\n            )}\r\n          </View>\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n    </Animated.View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { width: \"100%\", alignItems: \"center\" },\r\n  toastContainer: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 12,\r\n    borderRadius: 5,\r\n    marginVertical: 5,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\",\r\n  },\r\n  message: {\r\n    color: \"#fff\",\r\n    fontWeight: \"500\",\r\n  },\r\n  iconContainer: {\r\n    marginRight: 5,\r\n  },\r\n});\r\n\r\nexport default Toast;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}