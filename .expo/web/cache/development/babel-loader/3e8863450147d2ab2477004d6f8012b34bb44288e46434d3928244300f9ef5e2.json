{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _Linking = _interopRequireDefault(require(\"../../Linking/Linking\"));\nvar _StyleSheet = _interopRequireDefault(require(\"../../StyleSheet/StyleSheet\"));\nvar _Text = _interopRequireDefault(require(\"../../Text/Text\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\companytask\\\\Toys_Project\\\\client\\\\Toys_Projects\\\\node_modules\\\\react-native\\\\Libraries\\\\LogBox\\\\UI\\\\LogBoxMessage.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction getLinkRanges(string) {\n  var regex = /https?:\\/\\/[^\\s$.?#].[^\\s]*/gi;\n  var matches = [];\n  var regexResult;\n  while ((regexResult = regex.exec(string)) !== null) {\n    if (regexResult != null) {\n      matches.push({\n        lowerBound: regexResult.index,\n        upperBound: regex.lastIndex\n      });\n    }\n  }\n  return matches;\n}\nfunction TappableLinks(props) {\n  var _this = this;\n  var matches = getLinkRanges(props.content);\n  if (matches.length === 0) {\n    return (0, _jsxRuntime.jsx)(_Text.default, {\n      style: props.style,\n      children: props.content\n    });\n  }\n  var fragments = [];\n  var indexCounter = 0;\n  var startIndex = 0;\n  var _loop = function _loop() {\n    if (startIndex < linkRange.lowerBound) {\n      var _text = props.content.substring(startIndex, linkRange.lowerBound);\n      fragments.push((0, _jsxRuntime.jsx)(_Text.default, {\n        children: _text\n      }, ++indexCounter));\n    }\n    var link = props.content.substring(linkRange.lowerBound, linkRange.upperBound);\n    fragments.push((0, _jsxRuntime.jsx)(_Text.default, {\n      onPress: function onPress() {\n        _Linking.default.openURL(link);\n      },\n      style: styles.linkText,\n      children: link\n    }, ++indexCounter));\n    startIndex = linkRange.upperBound;\n  };\n  for (var linkRange of matches) {\n    _loop();\n  }\n  if (startIndex < props.content.length) {\n    var text = props.content.substring(startIndex);\n    fragments.push((0, _jsxRuntime.jsx)(_Text.default, {\n      style: props.style,\n      children: text\n    }, ++indexCounter));\n  }\n  return (0, _jsxRuntime.jsx)(_Text.default, {\n    style: props.style,\n    children: fragments\n  });\n}\nvar cleanContent = function cleanContent(content) {\n  return content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');\n};\nfunction LogBoxMessage(props) {\n  var _this2 = this;\n  var _props$message = props.message,\n    content = _props$message.content,\n    substitutions = _props$message.substitutions;\n  if (props.plaintext === true) {\n    return (0, _jsxRuntime.jsx)(_Text.default, {\n      children: cleanContent(content)\n    });\n  }\n  var maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  var substitutionStyle = props.style;\n  var elements = [];\n  var length = 0;\n  var createUnderLength = function createUnderLength(key, message, style) {\n    var cleanMessage = cleanContent(message);\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n    if (length < maxLength) {\n      elements.push((0, _jsxRuntime.jsx)(TappableLinks, {\n        content: cleanMessage,\n        style: style\n      }, key));\n    }\n    length += cleanMessage.length;\n  };\n  var lastOffset = substitutions.reduce(function (prevOffset, substitution, index) {\n    var key = String(index);\n    if (substitution.offset > prevOffset) {\n      var prevPart = content.substr(prevOffset, substitution.offset - prevOffset);\n      createUnderLength(key, prevPart);\n    }\n    var substitutionPart = content.substr(substitution.offset, substitution.length);\n    createUnderLength(key + '.5', substitutionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n  if (lastOffset < content.length) {\n    var lastPart = content.substr(lastOffset);\n    createUnderLength('-1', lastPart);\n  }\n  return (0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {\n    children: elements\n  });\n}\nvar styles = _StyleSheet.default.create({\n  linkText: {\n    textDecorationLine: 'underline'\n  }\n});\nvar _default = LogBoxMessage;\nexports.default = _default;","map":{"version":3,"names":["_Linking","_interopRequireDefault","require","_StyleSheet","_Text","React","_interopRequireWildcard","_jsxRuntime","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","getLinkRanges","string","regex","matches","regexResult","exec","push","lowerBound","index","upperBound","lastIndex","TappableLinks","props","_this","content","length","jsx","style","children","fragments","indexCounter","startIndex","_loop","linkRange","text","substring","link","onPress","Linking","openURL","styles","linkText","cleanContent","replace","LogBoxMessage","_this2","_props$message","message","substitutions","plaintext","maxLength","Infinity","substitutionStyle","elements","createUnderLength","cleanMessage","slice","lastOffset","reduce","prevOffset","substitution","String","offset","prevPart","substr","substitutionPart","lastPart","Fragment","StyleSheet","create","textDecorationLine","_default","exports"],"sources":["C:/companytask/Toys_Project/client/Toys_Projects/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {Message} from '../Data/parseLogBoxLog';\n\nimport Linking from '../../Linking/Linking';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport * as React from 'react';\n\ntype Props = {\n  message: Message,\n  style: TextStyleProp,\n  plaintext?: ?boolean,\n  maxLength?: ?number,\n  ...\n};\n\ntype Range = {\n  lowerBound: number,\n  upperBound: number,\n};\n\nfunction getLinkRanges(string: string): $ReadOnlyArray<Range> {\n  const regex = /https?:\\/\\/[^\\s$.?#].[^\\s]*/gi;\n  const matches = [];\n\n  let regexResult: RegExp$matchResult | null;\n  while ((regexResult = regex.exec(string)) !== null) {\n    if (regexResult != null) {\n      matches.push({\n        lowerBound: regexResult.index,\n        upperBound: regex.lastIndex,\n      });\n    }\n  }\n\n  return matches;\n}\n\nfunction TappableLinks(props: {\n  content: string,\n  style: void | TextStyleProp,\n}): React.Node {\n  const matches = getLinkRanges(props.content);\n\n  if (matches.length === 0) {\n    // No URLs detected. Just return the content.\n    return <Text style={props.style}>{props.content}</Text>;\n  }\n\n  // URLs were detected. Construct array of Text nodes.\n\n  let fragments: Array<React.Node> = [];\n  let indexCounter = 0;\n  let startIndex = 0;\n\n  for (const linkRange of matches) {\n    if (startIndex < linkRange.lowerBound) {\n      const text = props.content.substring(startIndex, linkRange.lowerBound);\n      fragments.push(<Text key={++indexCounter}>{text}</Text>);\n    }\n\n    const link = props.content.substring(\n      linkRange.lowerBound,\n      linkRange.upperBound,\n    );\n    fragments.push(\n      <Text\n        onPress={() => {\n          // $FlowFixMe[unused-promise]\n          Linking.openURL(link);\n        }}\n        key={++indexCounter}\n        style={styles.linkText}>\n        {link}\n      </Text>,\n    );\n\n    startIndex = linkRange.upperBound;\n  }\n\n  if (startIndex < props.content.length) {\n    const text = props.content.substring(startIndex);\n    fragments.push(\n      <Text key={++indexCounter} style={props.style}>\n        {text}\n      </Text>,\n    );\n  }\n\n  return <Text style={props.style}>{fragments}</Text>;\n}\n\nconst cleanContent = (content: string) =>\n  content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');\n\nfunction LogBoxMessage(props: Props): React.Node {\n  const {content, substitutions}: Message = props.message;\n\n  if (props.plaintext === true) {\n    return <Text>{cleanContent(content)}</Text>;\n  }\n\n  const maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  const substitutionStyle: TextStyleProp = props.style;\n  const elements = [];\n  let length = 0;\n  const createUnderLength = (\n    key: string | $TEMPORARY$string<'-1'>,\n    message: string,\n    style: void | TextStyleProp,\n  ) => {\n    let cleanMessage = cleanContent(message);\n\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n\n    if (length < maxLength) {\n      elements.push(\n        <TappableLinks content={cleanMessage} key={key} style={style} />,\n      );\n    }\n\n    length += cleanMessage.length;\n  };\n\n  const lastOffset = substitutions.reduce((prevOffset, substitution, index) => {\n    const key = String(index);\n\n    if (substitution.offset > prevOffset) {\n      const prevPart = content.substr(\n        prevOffset,\n        substitution.offset - prevOffset,\n      );\n\n      createUnderLength(key, prevPart);\n    }\n\n    const substitutionPart = content.substr(\n      substitution.offset,\n      substitution.length,\n    );\n\n    createUnderLength(key + '.5', substitutionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n\n  if (lastOffset < content.length) {\n    const lastPart = content.substr(lastOffset);\n    createUnderLength('-1', lastPart);\n  }\n\n  return <>{elements}</>;\n}\n\nconst styles = StyleSheet.create({\n  linkText: {\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default LogBoxMessage;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}