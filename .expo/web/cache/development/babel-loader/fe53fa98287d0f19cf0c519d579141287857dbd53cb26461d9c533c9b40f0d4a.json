{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.apiCalls = exports.GETAPI = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar BASE_URL = 'http://192.168.0.103:5000';\nvar apiCalls = function () {\n  var _ref = (0, _asyncToGenerator2.default)(function* (endpoint, requestData, method) {\n    var toast = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    try {\n      var _respData$data, _respData$data2, _respData$error;\n      var url_endpoit = BASE_URL + endpoint;\n      console.log(requestData);\n      var response = yield fetch(url_endpoit, {\n        method: method,\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(requestData)\n      });\n      var respData = yield response.json();\n      console.log(respData, 'respData');\n      var message = (respData == null ? void 0 : (_respData$data = respData.data) == null ? void 0 : _respData$data.message) !== undefined ? respData == null ? void 0 : (_respData$data2 = respData.data) == null ? void 0 : _respData$data2.message : (respData == null ? void 0 : (_respData$error = respData.error) == null ? void 0 : _respData$error.message) || (respData == null ? void 0 : respData.error) || respData.message;\n      toast != null && toast.show(message, {\n        data: {\n          type: respData.status ? 'green' : 'red'\n        }\n      });\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n      toast != null && toast.show(error == null ? void 0 : error.message, {\n        data: {\n          type: 'red'\n        }\n      });\n    }\n  });\n  return function apiCalls(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexports.apiCalls = apiCalls;\nvar GETAPI = function () {\n  var _ref2 = (0, _asyncToGenerator2.default)(function* (endpoint) {\n    try {\n      var url_endpoit = BASE_URL + endpoint;\n      var response = yield fetch(url_endpoit, {\n        method: \"GET\",\n        headers: {\n          'Content-type': 'application/json'\n        }\n      });\n      var respData = yield response.json();\n      console.log(respData, 'respdata');\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n    }\n  });\n  return function GETAPI(_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexports.GETAPI = GETAPI;","map":{"version":3,"names":["BASE_URL","apiCalls","_ref","_asyncToGenerator2","default","endpoint","requestData","method","toast","arguments","length","undefined","_respData$data","_respData$data2","_respData$error","url_endpoit","console","log","response","fetch","headers","body","JSON","stringify","respData","json","message","data","error","show","type","status","_x","_x2","_x3","apply","exports","GETAPI","_ref2","_x4"],"sources":["C:/companytask/Toys_Project/client/Toys_Projects/utils/apiCalls.js"],"sourcesContent":["let BASE_URL = 'http://192.168.0.103:5000'\r\nconst apiCalls = async (endpoint, requestData, method, toast = null) => {\r\n    try {\r\n        let url_endpoit = BASE_URL + endpoint\r\n        console.log(requestData);\r\n        const response = await fetch(url_endpoit, {\r\n            method: method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(requestData)\r\n        })\r\n\r\n        const respData = await response.json()\r\n        console.log(respData, 'respData');\r\n        let message = respData?.data?.message !== undefined ? respData?.data?.message : respData?.error?.message || respData?.error || respData.message\r\n        toast != null && toast.show(message, {\r\n            data: {\r\n                type: respData.status ? 'green' : 'red'\r\n            }\r\n        })\r\n        return respData\r\n    } catch (error) {\r\n        console.error(error.message);\r\n        toast != null && toast.show(error?.message, {\r\n            data: {\r\n                type: 'red'\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nconst GETAPI = async (endpoint) => {\r\n    try {\r\n        let url_endpoit = BASE_URL + endpoint\r\n        const response = await fetch(url_endpoit, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        })\r\n\r\n        const respData = await response.json()\r\n        console.log(respData, 'respdata');\r\n        return respData\r\n    } catch (error) {\r\n        console.error(error.message);\r\n\r\n    }\r\n};\r\n\r\nexport {\r\n    apiCalls,\r\n    GETAPI\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}