{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensions = useDimensions;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _reactNative = require(\"react-native\");\nfunction useDimensions() {\n  var _useState = (0, _react.useState)(_reactNative.Dimensions.get(\"window\")),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    dimensions = _useState2[0],\n    setDimensions = _useState2[1];\n  var onChange = function onChange(_ref) {\n    var window = _ref.window;\n    setDimensions(window);\n  };\n  (0, _react.useEffect)(function () {\n    var subscription = _reactNative.Dimensions.addEventListener(\"change\", onChange);\n    return function () {\n      if (typeof (subscription === null || subscription === void 0 ? void 0 : subscription.remove) === \"function\") {\n        subscription.remove();\n      } else {\n        _reactNative.Dimensions.removeEventListener(\"change\", onChange);\n      }\n    };\n  }, []);\n  return dimensions;\n}","map":{"version":3,"names":["_react","require","_reactNative","useDimensions","_useState","useState","Dimensions","get","_useState2","_slicedToArray2","default","dimensions","setDimensions","onChange","_ref","window","useEffect","subscription","addEventListener","remove","removeEventListener"],"sources":["C:\\companytask\\Toys_Project\\client\\Toys_Projects\\node_modules\\react-native-toast-notifications\\lib\\module\\utils\\useDimensions.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Dimensions, ScaledSize } from \"react-native\";\r\n\r\nexport function useDimensions() {\r\n  const [dimensions, setDimensions] = useState(Dimensions.get(\"window\"));\r\n\r\n  const onChange = ({ window }: { window: ScaledSize }) => {\r\n    setDimensions(window);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const subscription = Dimensions.addEventListener(\"change\", onChange);\r\n\r\n    return () => {\r\n      // @ts-expect-error - React Native >= 0.65\r\n      if (typeof subscription?.remove === \"function\") {\r\n        // @ts-expect-error\r\n        subscription.remove();\r\n      } else {\r\n        // React Native < 0.65\r\n        Dimensions.removeEventListener(\"change\", onChange);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return dimensions;\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEO,SAASE,aAATA,CAAA,EAAyB;EAC9B,IAAAC,SAAA,GAAoC,IAAAC,eAAQ,EAACC,uBAAU,CAACC,GAAX,CAAe,QAAf,CAAD,CAA5C;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAN,SAAA;IAAOO,UAAD,GAAAH,UAAA;IAAaI,aAAb,GAAAJ,UAAA;EAEN,IAAMK,QAAQ,GAAG,SAAXA,QAAQA,CAAAC,IAAA,EAA2C;IAAA,IAArCC,MAAA,GAAAD,IAAA,CAAAC,MAAA;IAClBH,aAAa,CAACG,MAAD,CAAb;EACD,CAFD;EAIA,IAAAC,gBAAS,EAAC,YAAM;IACd,IAAMC,YAAY,GAAGX,uBAAU,CAACY,gBAAX,CAA4B,QAA5B,EAAsCL,QAAtC,CAArB;IAEA,OAAO,YAAM;MAEX,IAAI,QAAOI,YAAP,aAAOA,YAAP,uBAAOA,YAAY,CAAEE,MAArB,MAAgC,UAApC,EAAgD;QAE9CF,YAAY,CAACE,MAAb;MACD,CAHD,MAGO;QAELb,uBAAU,CAACc,mBAAX,CAA+B,QAA/B,EAAyCP,QAAzC;MACD;IACF,CATD;EAUD,CAbQ,EAaN,EAbM,CAAT;EAeA,OAAOF,UAAP;AACD"},"metadata":{},"sourceType":"script","externalDependencies":[]}